<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.kuang.dao.TeacherMapper">
<!--一、按结果嵌套查询：  -->
    <select id="getTeacher2" resultMap="TeacherStudent">
        select s.id sid, s.name sname , t.name tname, t.id tid
        from mybatis.student s,mybatis.teacher t
        where s.tid = t.id and t.id=#{tid}
    </select>

    <resultMap id="TeacherStudent" type="Teacher">
        <result property="id" column="tid"/>
        <result property="name" column="tname"/>
        <!--对象用 association,集合用collection
        另：javaType=""是指定的属性的类型！
        集合中的泛型，我们用ofType获取，与上面javaType=""没啥本质区别。只是他是一个集合，要取泛型的东西罢了
        故下面代码：理解为：students其类型为ofType="Student"，我们也不可能把students的类型弄成List.这才是一对一
        但是Teacher中的这个属性 private List<Student> students;就是集合，故我们用ofType
        -->
        <collection property="students" ofType="Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>



    <!--=====================================================================================-->
    <!--=====================================================================================-->
    <!--=====================================================================================-->
<!--    二、按查询嵌套处理-->

    <select id="getTeacher3" resultMap="TeacherStudent2">
        select * from mybatis.teacher where id = #{tid}
    </select>

    <resultMap id="TeacherStudent2" type="Teacher">
        <!--column是一对多的外键 , 写的是一的主键的列名-->
        <collection property="students" javaType="ArrayList" ofType="Student" column="id" select="getStudentByTeacherId"/>
    </resultMap>

    <select id="getStudentByTeacherId" resultType="Student">
        select * from mybatis.student where tid = #{tid}
    </select>






</mapper>
